/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import BLL.CTHoaDon_BLL;
import BLL.HoaDon_BLL;
import BLL.KhachHang_BLL;
import BLL.SanPham_BLL;
import DAL.NhanVien_DAL;
import DTO.CTHoaDon;
import DTO.HoaDon;
import DTO.KhachHang;
import DTO.NhanVien;
import DTO.SanPham;
import Untils.MessBox;
import com.github.sarxos.webcam.Webcam;
import com.github.sarxos.webcam.WebcamPanel;
import com.github.sarxos.webcam.WebcamResolution;
import com.google.zxing.BinaryBitmap;
import com.google.zxing.LuminanceSource;
import com.google.zxing.MultiFormatReader;
import com.google.zxing.NotFoundException;
import com.google.zxing.Result;
import com.google.zxing.client.j2se.BufferedImageLuminanceSource;
import com.google.zxing.common.HybridBinarizer;
import java.awt.Dimension;
import java.awt.image.BufferedImage;
import java.io.FileNotFoundException;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.concurrent.Executor;
import java.util.concurrent.Executors;
import java.util.concurrent.ThreadFactory;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Duy
 */
public class form_BanHang extends javax.swing.JFrame implements Runnable, ThreadFactory{
    private WebcamPanel panel = null;
    private Webcam webcam = null;

    private static final long serialVersionUID = 6441489157408381878L;
    private Executor executor = Executors.newSingleThreadExecutor(this);
    SanPham_BLL spBLL = new SanPham_BLL();
    ArrayList<SanPham> lstSP = spBLL.getByID("");
    KhachHang_BLL khBLL = new KhachHang_BLL();
    ArrayList<KhachHang> lstKH = khBLL.getByName("");
    ArrayList<CTHoaDon> lstCTHD = new ArrayList<>();
    CTHoaDon_BLL cthdBLL = new CTHoaDon_BLL();
    HoaDon_BLL hdBLL = new HoaDon_BLL();
    double tongtien = 0;
    String userlg = "";
    String role = "";
    int xMouse;
    int yMouse;
    
    /**
     * Creates new form TestFormBanHang
     */
    public form_BanHang() {
        initComponents();
        setLocationRelativeTo(null);
        Load();
    }
    public form_BanHang(String user, String quyen) {
        initComponents();
        initWebcam();
        setLocationRelativeTo(null);
        userlg = user;
        role = quyen;
        Load();
    }
    private void initWebcam() {
        Dimension size = WebcamResolution.QVGA.getSize();
        webcam = Webcam.getWebcams().get(0);
        webcam.setViewSize(size);
        panel = new WebcamPanel(webcam);
        panel.setPreferredSize(size);
        pnlCam.add(panel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 40, 40));
        executor.execute(this);
    }

    @Override
    public void run() {
        do {
            try {
                Thread.sleep(100);
            } catch (InterruptedException e) {
                e.printStackTrace();
            }

            Result result = null;
            BufferedImage image1 = null;

            if (webcam.isOpen()) {
                if ((image1 = webcam.getImage()) == null) {
                    continue;
                }
            }
            LuminanceSource source1 = new BufferedImageLuminanceSource(image1);
            BinaryBitmap bitmap = new BinaryBitmap(new HybridBinarizer(source1));

            try {
                result = new MultiFormatReader().decode(bitmap);
            } catch (NotFoundException e) {
                //Không có dữ liệu
            }

            if (result != null) {
                txtTimSP.setText(result.getText());
                timsp();
            }
        } while (true);
    }

    @Override
    public Thread newThread(Runnable r) {
        Thread t = new Thread(r, "My Thread");
        t.setDaemon(true);
        return t;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        pnlHoaDon = new javax.swing.JPanel();
        pnlThongTinChung = new javax.swing.JPanel();
        lblMaHD = new javax.swing.JLabel();
        lblNgay = new javax.swing.JLabel();
        lblMaNV = new javax.swing.JLabel();
        lblTenKH = new javax.swing.JLabel();
        lblDiaChi = new javax.swing.JLabel();
        lblDT = new javax.swing.JLabel();
        txtMaHD = new javax.swing.JTextField();
        cbbMaNV = new javax.swing.JComboBox<>();
        txtTenKH = new javax.swing.JTextField();
        txtDiaChi = new javax.swing.JTextField();
        txtDT = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        txtMaKH = new javax.swing.JTextField();
        dateChs = new com.toedter.calendar.JDateChooser();
        jPanel4 = new javax.swing.JPanel();
        lblDonGia = new javax.swing.JLabel();
        txtDonGia = new javax.swing.JTextField();
        lblSoLuong = new javax.swing.JLabel();
        txtSoLuong = new javax.swing.JTextField();
        lblGiamGia = new javax.swing.JLabel();
        txtGiamGia = new javax.swing.JTextField();
        lblPhanTram = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblSPchon = new javax.swing.JTable();
        txtGhiChu = new javax.swing.JTextField();
        lblGhiChu = new javax.swing.JLabel();
        btnThemSP = new javax.swing.JButton();
        btnHuyHD = new javax.swing.JButton();
        pnlTongCong = new javax.swing.JPanel();
        lblTongCong = new javax.swing.JLabel();
        txtTongCong = new javax.swing.JTextField();
        btnThanhToanHD = new javax.swing.JButton();
        pnlSanPham = new javax.swing.JPanel();
        txtTimSP = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblDSSP = new javax.swing.JTable();
        pnlKhachHang = new javax.swing.JPanel();
        txtTimKH = new javax.swing.JTextField();
        btnThemKH = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblDSKH = new javax.swing.JTable();
        pnlTop = new javax.swing.JPanel();
        lblIconQR = new javax.swing.JLabel();
        pnlCam = new javax.swing.JPanel();
        lblTitle = new javax.swing.JLabel();
        btnCloseFrm = new javax.swing.JButton();
        btnRefesth = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        pnlHoaDon.setBackground(new java.awt.Color(255, 255, 255));
        pnlHoaDon.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Hoá đơn", javax.swing.border.TitledBorder.LEADING, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        pnlThongTinChung.setBackground(new java.awt.Color(255, 255, 255));
        pnlThongTinChung.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        lblMaHD.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblMaHD.setText("Mã HĐ:");

        lblNgay.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblNgay.setText("Ngày bán:");

        lblMaNV.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblMaNV.setText("Mã NV:");

        lblTenKH.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblTenKH.setText("Tên KH:");

        lblDiaChi.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblDiaChi.setText("Địa chỉ:");

        lblDT.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblDT.setText("Điện thoại:");

        txtMaHD.setEditable(false);
        txtMaHD.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        txtMaHD.setForeground(new java.awt.Color(255, 51, 51));

        cbbMaNV.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        txtTenKH.setEditable(false);
        txtTenKH.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        txtDiaChi.setEditable(false);
        txtDiaChi.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        txtDT.setEditable(false);
        txtDT.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        jLabel1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel1.setText("Mã KH:");

        txtMaKH.setEditable(false);
        txtMaKH.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtMaKH.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtMaKHKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout pnlThongTinChungLayout = new javax.swing.GroupLayout(pnlThongTinChung);
        pnlThongTinChung.setLayout(pnlThongTinChungLayout);
        pnlThongTinChungLayout.setHorizontalGroup(
            pnlThongTinChungLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlThongTinChungLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlThongTinChungLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblDiaChi)
                    .addComponent(lblNgay)
                    .addComponent(lblTenKH)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlThongTinChungLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pnlThongTinChungLayout.createSequentialGroup()
                        .addGroup(pnlThongTinChungLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtTenKH)
                            .addComponent(txtMaKH)
                            .addComponent(dateChs, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(pnlThongTinChungLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblDT)
                            .addComponent(lblMaNV)
                            .addComponent(lblMaHD))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(pnlThongTinChungLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtDT)
                            .addComponent(cbbMaNV, 0, 170, Short.MAX_VALUE)
                            .addComponent(txtMaHD))
                        .addGap(11, 11, 11))
                    .addComponent(txtDiaChi))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlThongTinChungLayout.setVerticalGroup(
            pnlThongTinChungLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlThongTinChungLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlThongTinChungLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnlThongTinChungLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblMaHD)
                        .addComponent(txtMaHD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlThongTinChungLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(dateChs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblNgay)))
                .addGap(18, 18, 18)
                .addGroup(pnlThongTinChungLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMaNV)
                    .addComponent(cbbMaNV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(txtMaKH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlThongTinChungLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTenKH)
                    .addComponent(txtTenKH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDT)
                    .addComponent(txtDT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlThongTinChungLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDiaChi)
                    .addComponent(txtDiaChi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));

        lblDonGia.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblDonGia.setText("Đơn giá:");

        txtDonGia.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        lblSoLuong.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblSoLuong.setText("SL:");

        txtSoLuong.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtSoLuong.setText("0");

        lblGiamGia.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblGiamGia.setText("Giảm giá:");

        txtGiamGia.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtGiamGia.setText("0");
        txtGiamGia.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtGiamGiaKeyReleased(evt);
            }
        });

        lblPhanTram.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblPhanTram.setText("%");

        tblSPchon.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Tên SP", "Số lượng", "Đơn giá", "Giảm(%)", "Thành tiền"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblSPchon.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tblSPchonKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tblSPchon);

        txtGhiChu.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        lblGhiChu.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblGhiChu.setText("Ghi chú:");

        btnThemSP.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        btnThemSP.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/addSP_icon20x20.png"))); // NOI18N
        btnThemSP.setText("Thêm");
        btnThemSP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemSPActionPerformed(evt);
            }
        });

        btnHuyHD.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        btnHuyHD.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/RecyclingBinicon25x25.png"))); // NOI18N
        btnHuyHD.setText("Huỷ");
        btnHuyHD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHuyHDActionPerformed(evt);
            }
        });

        pnlTongCong.setBackground(new java.awt.Color(255, 255, 255));
        pnlTongCong.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        lblTongCong.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        lblTongCong.setText("TỔNG CỘNG:");

        txtTongCong.setEditable(false);
        txtTongCong.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N

        javax.swing.GroupLayout pnlTongCongLayout = new javax.swing.GroupLayout(pnlTongCong);
        pnlTongCong.setLayout(pnlTongCongLayout);
        pnlTongCongLayout.setHorizontalGroup(
            pnlTongCongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTongCongLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTongCong)
                .addGap(18, 18, 18)
                .addComponent(txtTongCong)
                .addContainerGap())
        );
        pnlTongCongLayout.setVerticalGroup(
            pnlTongCongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTongCongLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlTongCongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTongCong)
                    .addComponent(txtTongCong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34))
        );

        btnThanhToanHD.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        btnThanhToanHD.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Bill_icon25x25.png"))); // NOI18N
        btnThanhToanHD.setText("Thanh toán");
        btnThanhToanHD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThanhToanHDActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlTongCong, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(lblGhiChu)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtGhiChu))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnThanhToanHD, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnHuyHD, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(lblSoLuong)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtSoLuong, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblDonGia)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtDonGia, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblGiamGia)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtGiamGia, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblPhanTram)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnThemSP, javax.swing.GroupLayout.DEFAULT_SIZE, 144, Short.MAX_VALUE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDonGia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblSoLuong)
                    .addComponent(txtSoLuong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDonGia)
                    .addComponent(lblGiamGia)
                    .addComponent(txtGiamGia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPhanTram, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnThemSP))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 396, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblGhiChu)
                    .addComponent(txtGhiChu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pnlTongCong, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnHuyHD, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnThanhToanHD, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout pnlHoaDonLayout = new javax.swing.GroupLayout(pnlHoaDon);
        pnlHoaDon.setLayout(pnlHoaDonLayout);
        pnlHoaDonLayout.setHorizontalGroup(
            pnlHoaDonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlHoaDonLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlHoaDonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlThongTinChung, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(5, 5, 5))
        );
        pnlHoaDonLayout.setVerticalGroup(
            pnlHoaDonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlHoaDonLayout.createSequentialGroup()
                .addComponent(pnlThongTinChung, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pnlSanPham.setBackground(new java.awt.Color(255, 255, 255));
        pnlSanPham.setBorder(javax.swing.BorderFactory.createTitledBorder("Sản phẩm"));

        txtTimSP.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtTimSP.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTimSPKeyReleased(evt);
            }
        });

        tblDSSP.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Tên SP", "Đơn giá"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblDSSP.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDSSPMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblDSSP);

        javax.swing.GroupLayout pnlSanPhamLayout = new javax.swing.GroupLayout(pnlSanPham);
        pnlSanPham.setLayout(pnlSanPhamLayout);
        pnlSanPhamLayout.setHorizontalGroup(
            pnlSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSanPhamLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtTimSP, javax.swing.GroupLayout.DEFAULT_SIZE, 248, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnlSanPhamLayout.setVerticalGroup(
            pnlSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSanPhamLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtTimSP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 706, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlKhachHang.setBackground(new java.awt.Color(255, 255, 255));
        pnlKhachHang.setBorder(javax.swing.BorderFactory.createTitledBorder("khách hàng"));

        txtTimKH.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtTimKH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTimKHActionPerformed(evt);
            }
        });
        txtTimKH.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTimKHKeyReleased(evt);
            }
        });

        btnThemKH.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        btnThemKH.setText("Mới");
        btnThemKH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemKHActionPerformed(evt);
            }
        });

        tblDSKH.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Tên KH", "SĐT"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblDSKH.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDSKHMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tblDSKH);

        javax.swing.GroupLayout pnlKhachHangLayout = new javax.swing.GroupLayout(pnlKhachHang);
        pnlKhachHang.setLayout(pnlKhachHangLayout);
        pnlKhachHangLayout.setHorizontalGroup(
            pnlKhachHangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlKhachHangLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlKhachHangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(pnlKhachHangLayout.createSequentialGroup()
                        .addComponent(txtTimKH, javax.swing.GroupLayout.DEFAULT_SIZE, 189, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnThemKH)))
                .addContainerGap())
        );
        pnlKhachHangLayout.setVerticalGroup(
            pnlKhachHangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlKhachHangLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlKhachHangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtTimKH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnThemKH, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3)
                .addContainerGap())
        );

        pnlTop.setBackground(new java.awt.Color(255, 255, 255));
        pnlTop.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                pnlTopMouseDragged(evt);
            }
        });
        pnlTop.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                pnlTopMousePressed(evt);
            }
        });

        lblIconQR.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/QRcodeIcon40x40.png"))); // NOI18N

        pnlCam.setBackground(new java.awt.Color(250, 250, 250));
        pnlCam.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(230, 230, 230)));
        pnlCam.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblTitle.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        lblTitle.setForeground(new java.awt.Color(0, 51, 153));
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("HOÁ ĐƠN BÁN HÀNG");

        btnCloseFrm.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Closebtn25x25.png"))); // NOI18N
        btnCloseFrm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseFrmActionPerformed(evt);
            }
        });

        btnRefesth.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Loadicon25x25.png"))); // NOI18N
        btnRefesth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefesthActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlTopLayout = new javax.swing.GroupLayout(pnlTop);
        pnlTop.setLayout(pnlTopLayout);
        pnlTopLayout.setHorizontalGroup(
            pnlTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTopLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(lblIconQR, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlCam, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(357, 357, 357)
                .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnRefesth, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCloseFrm, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        pnlTopLayout.setVerticalGroup(
            pnlTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(pnlTopLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblIconQR, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnCloseFrm, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlCam, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnRefesth, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlKhachHang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlHoaDon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(pnlTop, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(pnlTop, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlSanPham, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlHoaDon, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlKhachHang, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1216, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 857, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtGiamGiaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtGiamGiaKeyReleased
    }//GEN-LAST:event_txtGiamGiaKeyReleased

    private void tblSPchonKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblSPchonKeyReleased
    }//GEN-LAST:event_tblSPchonKeyReleased

    private void btnThemSPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemSPActionPerformed
        // TODO add your handling code here:
        addSPDaChon();
    }//GEN-LAST:event_btnThemSPActionPerformed

    private void btnHuyHDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHuyHDActionPerformed
        // TODO add your handling code here:
        clearForm();
    }//GEN-LAST:event_btnHuyHDActionPerformed

    private void btnThanhToanHDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThanhToanHDActionPerformed
        // TODO add your handling code here:
        TinhTien();
    }//GEN-LAST:event_btnThanhToanHDActionPerformed

    private void txtTimSPKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTimSPKeyReleased
        // TODO add your handling code here:
        timsp();
    }//GEN-LAST:event_txtTimSPKeyReleased

    private void tblDSSPMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDSSPMouseClicked
        // TODO add your handling code here:
        selectSP();
    }//GEN-LAST:event_tblDSSPMouseClicked

    private void txtTimKHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTimKHActionPerformed
    }//GEN-LAST:event_txtTimKHActionPerformed

    private void txtTimKHKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTimKHKeyReleased
        // TODO add your handling code here:
        String name = txtTimKH.getText();
        lstKH = khBLL.getByName(name);
        khBLL.LoadTableBH(tblDSKH, lstKH);
    }//GEN-LAST:event_txtTimKHKeyReleased

    private void btnThemKHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemKHActionPerformed
            // TODO add your handling code here:
            new form_NhapKHang().setVisible(true);
    }//GEN-LAST:event_btnThemKHActionPerformed

    private void tblDSKHMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDSKHMouseClicked
        // TODO add your handling code here:
        selectKH();
    }//GEN-LAST:event_tblDSKHMouseClicked

    private void btnCloseFrmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseFrmActionPerformed
        // TODO add your handling code here:
        this.dispose();
        try {
            new form_ManHinhChinh(userlg, role).setVisible(true);
        } catch (SQLException ex) {
            Logger.getLogger(form_BanHang.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnCloseFrmActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        webcam.close();
    }//GEN-LAST:event_formWindowClosed

    private void pnlTopMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlTopMousePressed
        xMouse = evt.getX();
        yMouse = evt.getY();
    }//GEN-LAST:event_pnlTopMousePressed

    private void pnlTopMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlTopMouseDragged
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();
        this.setLocation(x - xMouse,  y - yMouse);
    }//GEN-LAST:event_pnlTopMouseDragged

    private void txtMaKHKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMaKHKeyReleased
    }//GEN-LAST:event_txtMaKHKeyReleased

    private void btnRefesthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefesthActionPerformed
        LoadTableA();
    }//GEN-LAST:event_btnRefesthActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new form_BanHang().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCloseFrm;
    private javax.swing.JButton btnHuyHD;
    private javax.swing.JButton btnRefesth;
    private javax.swing.JButton btnThanhToanHD;
    private javax.swing.JButton btnThemKH;
    private javax.swing.JButton btnThemSP;
    private javax.swing.JComboBox<String> cbbMaNV;
    private com.toedter.calendar.JDateChooser dateChs;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblDT;
    private javax.swing.JLabel lblDiaChi;
    private javax.swing.JLabel lblDonGia;
    private javax.swing.JLabel lblGhiChu;
    private javax.swing.JLabel lblGiamGia;
    private javax.swing.JLabel lblIconQR;
    private javax.swing.JLabel lblMaHD;
    private javax.swing.JLabel lblMaNV;
    private javax.swing.JLabel lblNgay;
    private javax.swing.JLabel lblPhanTram;
    private javax.swing.JLabel lblSoLuong;
    private javax.swing.JLabel lblTenKH;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblTongCong;
    private javax.swing.JPanel pnlCam;
    private javax.swing.JPanel pnlHoaDon;
    private javax.swing.JPanel pnlKhachHang;
    private javax.swing.JPanel pnlSanPham;
    private javax.swing.JPanel pnlThongTinChung;
    private javax.swing.JPanel pnlTongCong;
    private javax.swing.JPanel pnlTop;
    private javax.swing.JTable tblDSKH;
    private javax.swing.JTable tblDSSP;
    private javax.swing.JTable tblSPchon;
    public static javax.swing.JTextField txtDT;
    public static javax.swing.JTextField txtDiaChi;
    private javax.swing.JTextField txtDonGia;
    private javax.swing.JTextField txtGhiChu;
    private javax.swing.JTextField txtGiamGia;
    private javax.swing.JTextField txtMaHD;
    public static javax.swing.JTextField txtMaKH;
    private javax.swing.JTextField txtSoLuong;
    public static javax.swing.JTextField txtTenKH;
    private javax.swing.JTextField txtTimKH;
    private javax.swing.JTextField txtTimSP;
    private javax.swing.JTextField txtTongCong;
    // End of variables declaration//GEN-END:variables
    public void Load(){ //Hàm load dữ liệu khi mở form
        spBLL.LoadTableBH(tblDSSP, lstSP); //Load danh sách sản phẩm
        khBLL.LoadTableBH(tblDSKH, lstKH); //Load danh sahcs khách hàng
        LoadCbbMaNV(); //Load combobox mã nhân viên
        try {
            txtMaHD.setText(hdBLL.autoID().trim()); //Hàm tạo và gán Mã hoá đơn mới
        } catch (SQLException ex) {
            Logger.getLogger(form_BanHang.class.getName()).log(Level.SEVERE, null, ex);
        }
        dayNow();
    }
    public void dayNow(){ //Hàm lấy ngày hiện tại
        Date d = new Date();
        dateChs.setDate(d);
    }
    public void LoadTableA(){ // Load lại table danh sách khách hàng sau khi thêm kh mới
        lstKH = khBLL.getALL();
        khBLL.LoadTableBH(tblDSKH, lstKH);
    }
    
    public void LoadCbbMaNV(){ // Load combobox mã nhân viên
        DefaultComboBoxModel CBMaNV = (DefaultComboBoxModel) cbbMaNV.getModel();
        CBMaNV.removeAllElements();
        NhanVien_DAL nvDTO = new NhanVien_DAL();
        List<NhanVien> list = nvDTO.getALL();
        for(NhanVien nv : list){
            CBMaNV.addElement(nv);
        }
    }
    public void selectKH(){// Hàm click tblKH hiện lên form
        int selectKH = tblDSKH.getSelectedRow();
        if (selectKH != -1) {
            txtMaKH.setText(lstKH.get(selectKH).getMaKH().trim());
            txtTenKH.setText(lstKH.get(selectKH).getTenKH().trim());
            txtDT.setText(lstKH.get(selectKH).getSoDT().trim());
            txtDiaChi.setText(lstKH.get(selectKH).getDiaChi().trim());
        }
    }
    
    public void selectSP(){// Hàm click tblSP hiện lên form
        int selectSP = tblDSSP.getSelectedRow();
        if (selectSP != -1){
            txtDonGia.setText(new DecimalFormat("#.##").format(lstSP.get(selectSP).getGiaBan()).trim());
        }
    }
    public void timsp(){
        String keyword = txtTimSP.getText();
        if(keyword.matches("SP(.*)") || keyword.matches("sp(.*)")){
            lstSP = spBLL.getByidBh(keyword);
            spBLL.LoadTableBH(tblDSSP, lstSP);
        } else {
            lstSP = spBLL.getByID(keyword);
            spBLL.LoadTableBH(tblDSSP, lstSP);
        }
    }
    public void addSPDaChon(){//Hàm thêm sản phẩm đã chọn vào tblSPChon
        int selectCTHD = tblSPchon.getSelectedRow();
        int selectSP = tblDSSP.getSelectedRow();
        if (selectCTHD == -1 && selectSP == -1) {
            Untils.MessBox.alert(this, "Bạn chưa chọn sản phẩm!");
        } else if (Integer.parseInt(txtSoLuong.getText()) <= 0) {
            Untils.MessBox.alert(this, "Bạn chưa nhập số lượng!");
        } else if (Integer.parseInt(txtGiamGia.getText()) <0 ) {
            Untils.MessBox.alert(this, "Bạn chưa nhập giảm giá!");
        } else {
            String maSP = lstSP.get(selectSP).getMaSP();
            String tenSP = lstSP.get(selectSP).getTenSP();
            int soLuong = 1;
            double donGia = 0.0;
            int giamGia = 0;
            double thanhtien = 0.0;
            donGia = Double.parseDouble(txtDonGia.getText());
            soLuong = Integer.parseInt(txtSoLuong.getText());
            giamGia = Integer.parseInt(txtGiamGia.getText());
            thanhtien = (1.0)*soLuong*donGia*(1-(1.0)*giamGia/100);
            if (selectCTHD != -1) {
                maSP = lstCTHD.get(selectCTHD).getMaSP();
                tenSP = lstCTHD.get(selectCTHD).getTenSP();
            }
            if (KTSoLuong(maSP, soLuong)){
                // Nếu đã có chi tiết thì chỉ update Số lượng, giảm giá
                if(KiemTraTonTai(maSP)!= -1) {
                    CTHoaDon up = new CTHoaDon();
                    up = lstCTHD.get(KiemTraTonTai(maSP));
                    up.setSoLuong(soLuong);
                    up.setTenSP(tenSP);
                    up.setGiamGia(giamGia);
                    up.setDonGia(donGia);
                    up.setThanhTien(thanhtien);
                } else {
                    CTHoaDon newCT = new CTHoaDon();
                    newCT.setMaHD(txtMaHD.getText());
                    newCT.setMaSP(maSP);
                    newCT.setTenSP(tenSP);
                    newCT.setSoLuong(soLuong);
                    newCT.setGiamGia(giamGia);
                    newCT.setDonGia(donGia);
                    newCT.setThanhTien(thanhtien);
                    lstCTHD.add(newCT);
                }
            } else {
                MessBox.alert(this, "Số lượng không đủ");
            }
            txtSoLuong.setText("0");
            txtDonGia.setText(null);
            txtGiamGia.setText("0");
            txtTongCong.setText(new DecimalFormat("###,###.###").format(cthdBLL.LoadTable(tblSPchon, lstCTHD)));
        }
    }
    
    boolean KTSoLuong(String maSP, int SL) {
        int soLuong = 0;
        for (SanPham sp : lstSP) {
            if (sp.getMaSP().equalsIgnoreCase(maSP)) {
                soLuong = sp.getSoLuong();
                break;
            }
        }
        return SL <= soLuong;
    }    
    
    private int KiemTraTonTai(String maSP) {
        int i = -1;
        if (lstCTHD == null) {
            return -1;
        }
        for (CTHoaDon ct : lstCTHD) {
            i++;
            if (ct.getMaSP().equalsIgnoreCase(maSP)) {
                return i;
            }
        }
        return -1;
    }    
    
    public void clearForm(){
        txtMaKH.setText(null);
        txtTenKH.setText(null);
        txtDT.setText(null);
        txtDiaChi.setText(null);
        txtDonGia.setText(null);
        txtSoLuong.setText("0");
        txtGiamGia.setText("0");
        tblSPchon.removeAll();
        txtGhiChu.setText(null);
        txtTongCong.setText(null);
        tblDSKH.clearSelection();
        tblDSSP.clearSelection();
    }
    
    public void TinhTien() {
        if (lstCTHD.isEmpty()) {
            MessBox.alert(this, "Chưa chọn sản phẩm");
        } else if (txtMaKH.getText().equals("")) {
            MessBox.alert(this, "Chưa nhập khách hàng!");
        }else {
            if(MessBox.confirm(this, "Thanh toán hoá đơn này?")){
                tongtien = Double.parseDouble(txtTongCong.getText().replace(",", ""));
                new form_ThanhToan(tongtien, null).setVisible(true);
                ThemHoaDon();
                clearForm();
                try {
                    txtMaHD.setText(hdBLL.autoID().trim());
                } catch (SQLException ex) {
                    Logger.getLogger(form_BanHang.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }
    
    public void ThemHoaDon() {
        HoaDon hd = new HoaDon();
        hd.setMaHD(txtMaHD.getText());
        hd.setMaKH(txtMaKH.getText());
        hd.setMaNV(cbbMaNV.getSelectedItem().toString());
        hd.setNgayLap(dateChs.getDate());
        hd.setTongTien(tongtien);
        hd.setGhiChu(txtGhiChu.getText());
        hdBLL.them(hd);
        lstCTHD.forEach((ct) -> {
            cthdBLL.themCT(ct);
        });
        try {
            hdBLL.XuatHD(hd.getMaHD());
        } catch (FileNotFoundException ex) {
            Logger.getLogger(form_BanHang.class.getName()).log(Level.SEVERE, null, ex);
        }
        lstCTHD.clear();
        tongtien = 0;
        ((DefaultTableModel) tblSPchon.getModel()).setRowCount(0);
        ArrayList<SanPham> lstSPa = spBLL.getALL();
        spBLL.LoadTableBH(tblDSSP, lstSPa);
    }
}
