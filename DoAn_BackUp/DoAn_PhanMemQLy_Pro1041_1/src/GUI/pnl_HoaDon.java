/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import BLL.CTHoaDon_BLL;
import BLL.HoaDon_BLL;
import BLL.SanPham_BLL;
import DAL.NhanVien_DAL;
import DTO.CTHoaDon;
import DTO.HoaDon;
import DTO.NhanVien;
import DTO.SanPham;
import Untils.MessBox;
import Untils.Tool;
import java.text.DecimalFormat;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import javax.swing.DefaultComboBoxModel;

/**
 *
 * @author Duy
 */
public class pnl_HoaDon extends javax.swing.JPanel {
    HoaDon_BLL hdBLL = new HoaDon_BLL();
    ArrayList<HoaDon> lstHD = hdBLL.getAll();
    CTHoaDon_BLL ctBLL = new CTHoaDon_BLL();
    ArrayList<CTHoaDon> lstCT = ctBLL.getAll();
    SanPham_BLL spBLL = new SanPham_BLL();
    ArrayList<SanPham> lstSP = spBLL.getALL();
    ArrayList<CTHoaDon> lstCTByID = new ArrayList<>();
    CTHoaDon sp;
    String maNV = "";
    double tongtien = 0;
    
    /**
     * Creates new form pnl_HoaDon
     */
    public pnl_HoaDon() {
        initComponents();
        Load();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tabs = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblHoaDon = new javax.swing.JTable();
        txtTimKiem = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCTHoaDon = new javax.swing.JTable();
        txtMaHD = new javax.swing.JTextField();
        lblMaHD = new javax.swing.JLabel();
        lblMaNV = new javax.swing.JLabel();
        cbbMaNV = new javax.swing.JComboBox<>();
        txtMaKH = new javax.swing.JTextField();
        lblNgayLap = new javax.swing.JLabel();
        lblMaKH = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        lblMaSP = new javax.swing.JLabel();
        txtMaSP = new javax.swing.JTextField();
        lblTenSP = new javax.swing.JLabel();
        txtTenSP = new javax.swing.JTextField();
        lblSL = new javax.swing.JLabel();
        txtSL = new javax.swing.JTextField();
        lblDonGia = new javax.swing.JLabel();
        txtGia = new javax.swing.JTextField();
        lblGiam = new javax.swing.JLabel();
        txtGiam = new javax.swing.JTextField();
        btnThemSP = new javax.swing.JButton();
        btnXoaSP = new javax.swing.JButton();
        btnSuaSP = new javax.swing.JButton();
        lblGhiChu = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtGhiChu = new javax.swing.JTextArea();
        lblTongTien = new javax.swing.JLabel();
        txtTongTien = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblListSPmoi = new javax.swing.JTable();
        txtTimSPMoi = new javax.swing.JTextField();
        btnCapNhatHD = new javax.swing.JButton();
        lblTongTien1 = new javax.swing.JLabel();
        txtTongMoi = new javax.swing.JTextField();
        btnXoaHD = new javax.swing.JButton();
        dateChs = new com.toedter.calendar.JDateChooser();

        setBackground(new java.awt.Color(255, 255, 255));

        tabs.setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        tblHoaDon.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "STT", "Mã HĐ", "Mã KH", "Mã NV", "Ngày", "Tổng tiền", "Ghi chú"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblHoaDon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblHoaDonMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tblHoaDon);

        txtTimKiem.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtTimKiem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTimKiemKeyReleased(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel3.setText("Tìm kiếm nhanh:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(txtTimKiem)
                        .addGap(97, 97, 97))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 967, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 539, Short.MAX_VALUE)
                .addContainerGap())
        );

        tabs.addTab("Danh sách hoá đơn", jPanel2);

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));

        tblCTHoaDon.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã sản phẩm", "Tên sản phẩm", "Số lượng", "Đơn giá", "Giảm giá", "Thành tiền"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblCTHoaDon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblCTHoaDonMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblCTHoaDon);

        txtMaHD.setEditable(false);
        txtMaHD.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        txtMaHD.setForeground(new java.awt.Color(255, 51, 51));
        txtMaHD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMaHDActionPerformed(evt);
            }
        });

        lblMaHD.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblMaHD.setText("Mã HĐ:");

        lblMaNV.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblMaNV.setText("Mã NV:");

        cbbMaNV.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        cbbMaNV.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cbbMaNVMouseClicked(evt);
            }
        });

        txtMaKH.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtMaKH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMaKHActionPerformed(evt);
            }
        });

        lblNgayLap.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblNgayLap.setText("Ngày lập:");

        lblMaKH.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblMaKH.setText("Mã KH:");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        lblMaSP.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblMaSP.setText("Mã SP:");

        txtMaSP.setEditable(false);
        txtMaSP.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        lblTenSP.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblTenSP.setText("Tên SP:");

        txtTenSP.setEditable(false);
        txtTenSP.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        lblSL.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblSL.setText("SL:");

        txtSL.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        lblDonGia.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblDonGia.setText("Giá:");

        txtGia.setEditable(false);
        txtGia.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        lblGiam.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblGiam.setText("Giảm(%):");

        txtGiam.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        btnThemSP.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/addbtnicon20x20.png"))); // NOI18N
        btnThemSP.setText("Thêm SP");
        btnThemSP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemSPActionPerformed(evt);
            }
        });

        btnXoaSP.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/RecyclingBinicon20x20.png"))); // NOI18N
        btnXoaSP.setText("Xoá SP");
        btnXoaSP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaSPActionPerformed(evt);
            }
        });

        btnSuaSP.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/fixbtnicon20x20.png"))); // NOI18N
        btnSuaSP.setText("Sửa SP");
        btnSuaSP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaSPActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(btnThemSP)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnXoaSP)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSuaSP, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblTenSP)
                            .addComponent(lblMaSP)
                            .addComponent(lblSL)
                            .addComponent(lblDonGia))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(txtSL, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(lblGiam)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtGiam))
                            .addComponent(txtMaSP)
                            .addComponent(txtTenSP)
                            .addComponent(txtGia, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtMaSP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblMaSP))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTenSP)
                    .addComponent(txtTenSP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSL)
                    .addComponent(txtSL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblGiam)
                    .addComponent(txtGiam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDonGia)
                    .addComponent(txtGia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnThemSP)
                    .addComponent(btnXoaSP)
                    .addComponent(btnSuaSP))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        lblGhiChu.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblGhiChu.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblGhiChu.setText("Ghi chú:");

        jScrollPane2.setMinimumSize(new java.awt.Dimension(15, 15));

        txtGhiChu.setColumns(20);
        txtGhiChu.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtGhiChu.setRows(5);
        jScrollPane2.setViewportView(txtGhiChu);

        lblTongTien.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        lblTongTien.setText("Tổng cũ:");

        txtTongTien.setEditable(false);
        txtTongTien.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        txtTongTien.setForeground(new java.awt.Color(51, 51, 255));
        txtTongTien.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        tblListSPmoi.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tblListSPmoi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblListSPmoiMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(tblListSPmoi);

        txtTimSPMoi.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtTimSPMoi.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTimSPMoiKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(txtTimSPMoi))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtTimSPMoi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        btnCapNhatHD.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        btnCapNhatHD.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Uploadicon25x25.png"))); // NOI18N
        btnCapNhatHD.setText("Cập nhật HĐ");
        btnCapNhatHD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCapNhatHDActionPerformed(evt);
            }
        });

        lblTongTien1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        lblTongTien1.setText("Tổng mới:");

        txtTongMoi.setEditable(false);
        txtTongMoi.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        txtTongMoi.setForeground(new java.awt.Color(51, 51, 255));
        txtTongMoi.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        btnXoaHD.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        btnXoaHD.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/RecyclingBinicon25x25.png"))); // NOI18N
        btnXoaHD.setText("Xoá HĐ");
        btnXoaHD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaHDActionPerformed(evt);
            }
        });

        dateChs.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblMaKH)
                            .addComponent(lblNgayLap))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(dateChs, javax.swing.GroupLayout.DEFAULT_SIZE, 169, Short.MAX_VALUE)
                            .addComponent(txtMaKH))
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lblMaNV)
                                .addGap(18, 18, 18)
                                .addComponent(cbbMaNV, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addComponent(lblMaHD)
                                .addGap(18, 18, 18)
                                .addComponent(txtMaHD, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnCapNhatHD, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnXoaHD, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 649, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel4Layout.createSequentialGroup()
                            .addComponent(lblTongTien)
                            .addGap(18, 18, 18)
                            .addComponent(txtTongTien, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(lblTongTien1)
                            .addGap(18, 18, 18)
                            .addComponent(txtTongMoi, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel4Layout.createSequentialGroup()
                            .addComponent(lblGhiChu)
                            .addGap(18, 18, 18)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 575, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(btnCapNhatHD)
                                    .addComponent(lblMaHD)
                                    .addComponent(txtMaHD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(44, 44, 44))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(dateChs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblNgayLap))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblMaKH)
                                    .addComponent(txtMaKH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblMaNV)
                                    .addComponent(cbbMaNV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnXoaHD))))
                        .addGap(19, 19, 19)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblGhiChu))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblTongTien)
                            .addComponent(txtTongTien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblTongTien1)
                            .addComponent(txtTongMoi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)))
                .addGap(7, 7, 7))
        );

        tabs.addTab("Chi tiết hoá đơn", jPanel4);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabs, javax.swing.GroupLayout.PREFERRED_SIZE, 992, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabs, javax.swing.GroupLayout.PREFERRED_SIZE, 630, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void tblHoaDonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblHoaDonMouseClicked
        setFormHD();
        loadTableCT();
        tabs.setSelectedIndex(1);
    }//GEN-LAST:event_tblHoaDonMouseClicked

    private void tblCTHoaDonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblCTHoaDonMouseClicked
        setFormCT();
    }//GEN-LAST:event_tblCTHoaDonMouseClicked

    private void txtTimKiemKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTimKiemKeyReleased
        String query = txtTimKiem.getText();
        Tool.TableFilter(tblHoaDon, query);
    }//GEN-LAST:event_txtTimKiemKeyReleased

    private void btnXoaHDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaHDActionPerformed
        DeleteHD();
    }//GEN-LAST:event_btnXoaHDActionPerformed

    private void btnCapNhatHDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCapNhatHDActionPerformed
        UpdateHD();
    }//GEN-LAST:event_btnCapNhatHDActionPerformed

    private void cbbMaNVMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cbbMaNVMouseClicked
        String selected_txt = cbbMaNV.getItemAt(cbbMaNV.getSelectedIndex());
    }//GEN-LAST:event_cbbMaNVMouseClicked

    private void txtMaHDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMaHDActionPerformed
    }//GEN-LAST:event_txtMaHDActionPerformed

    private void txtMaKHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMaKHActionPerformed
    }//GEN-LAST:event_txtMaKHActionPerformed

    private void txtTimSPMoiKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTimSPMoiKeyReleased
        String query = txtTimSPMoi.getText();
        Tool.TableFilter(tblListSPmoi, query);
    }//GEN-LAST:event_txtTimSPMoiKeyReleased

    private void btnXoaSPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaSPActionPerformed
        DeleteCT();
    }//GEN-LAST:event_btnXoaSPActionPerformed

    private void btnSuaSPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaSPActionPerformed
        UpdateCT();
    }//GEN-LAST:event_btnSuaSPActionPerformed

    private void tblListSPmoiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblListSPmoiMouseClicked
        setFormCTmoi();
    }//GEN-LAST:event_tblListSPmoiMouseClicked

    private void btnThemSPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemSPActionPerformed
        if(NhapCT()){
            InsertCT();
        }
    }//GEN-LAST:event_btnThemSPActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCapNhatHD;
    private javax.swing.JButton btnSuaSP;
    private javax.swing.JButton btnThemSP;
    private javax.swing.JButton btnXoaHD;
    private javax.swing.JButton btnXoaSP;
    private javax.swing.JComboBox<String> cbbMaNV;
    private com.toedter.calendar.JDateChooser dateChs;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JLabel lblDonGia;
    private javax.swing.JLabel lblGhiChu;
    private javax.swing.JLabel lblGiam;
    private javax.swing.JLabel lblMaHD;
    private javax.swing.JLabel lblMaKH;
    private javax.swing.JLabel lblMaNV;
    private javax.swing.JLabel lblMaSP;
    private javax.swing.JLabel lblNgayLap;
    private javax.swing.JLabel lblSL;
    private javax.swing.JLabel lblTenSP;
    private javax.swing.JLabel lblTongTien;
    private javax.swing.JLabel lblTongTien1;
    private javax.swing.JTabbedPane tabs;
    private javax.swing.JTable tblCTHoaDon;
    private javax.swing.JTable tblHoaDon;
    private javax.swing.JTable tblListSPmoi;
    private javax.swing.JTextArea txtGhiChu;
    private javax.swing.JTextField txtGia;
    private javax.swing.JTextField txtGiam;
    private javax.swing.JTextField txtMaHD;
    private javax.swing.JTextField txtMaKH;
    private javax.swing.JTextField txtMaSP;
    private javax.swing.JTextField txtSL;
    private javax.swing.JTextField txtTenSP;
    private javax.swing.JTextField txtTimKiem;
    private javax.swing.JTextField txtTimSPMoi;
    private javax.swing.JTextField txtTongMoi;
    private javax.swing.JTextField txtTongTien;
    // End of variables declaration//GEN-END:variables
    public void Load(){
        hdBLL.LoadTable(tblHoaDon, lstHD);
        spBLL.LoadTableBH(tblListSPmoi, lstSP);
        LoadCbbMaNV();
    }
    
    public void setFormHD(){
        int srow = tblHoaDon.getSelectedRow();
        if(srow != -1){
            txtMaHD.setText(tblHoaDon.getValueAt(srow, 1).toString().trim());
            txtMaKH.setText(tblHoaDon.getValueAt(srow, 2).toString().trim());
            cbbMaNV.getModel().setSelectedItem(tblHoaDon.getValueAt(srow, 3).toString());
            Date ngay = Untils.Date.toDate(tblHoaDon.getValueAt(srow, 4).toString(), ("yyyy-MM-dd"));
            dateChs.setDate(ngay);
            txtTongTien.setText(String.valueOf(tblHoaDon.getValueAt(srow, 5)));
            txtGhiChu.setText(tblHoaDon.getValueAt(srow, 6).toString());
        }
    }
    
    public void loadTableCT(){
        String maHD = null;
        int srow = tblHoaDon.getSelectedRow();
        if(srow != -1){
            HoaDon hd = lstHD.get(srow);
            maHD = tblHoaDon.getValueAt(srow, 1).toString().trim();
            lstCTByID = ctBLL.getByID(maHD);
            ctBLL.LoadTableCT(tblCTHoaDon, lstCTByID);
            txtTongMoi.setText(new DecimalFormat("###,###.###").format(ctBLL.LoadTableCT(tblCTHoaDon, lstCTByID)));
        }
    }
    
    public void setFormCT(){
        int srow1 = tblCTHoaDon.getSelectedRow();
        if(srow1 != -1) {
            String maHD = txtMaHD.getText();
            ArrayList<CTHoaDon> lstCT1 = ctBLL.getByID(maHD);
            CTHoaDon ct = lstCT1.get(srow1);
            txtMaSP.setText(ct.getMaSP().trim());
            txtTenSP.setText(ct.getTenSP());
            txtSL.setText(String.valueOf(ct.getSoLuong()));
            txtGiam.setText(String.valueOf(ct.getGiamGia()));
            txtGia.setText(new DecimalFormat("#.##").format(ct.getDonGia()));
            txtTongMoi.setText(new DecimalFormat("###,###.###").format(ctBLL.LoadTableCT(tblCTHoaDon, lstCTByID)));
        }
    }
    
    public void setFormCTmoi(){
        int srow1 = tblListSPmoi.getSelectedRow();
        if(srow1 != -1) {
            SanPham ct = lstSP.get(srow1);
            txtMaSP.setText(ct.getMaSP().trim());
            txtTenSP.setText(ct.getTenSP());
            txtGia.setText(new DecimalFormat("#.##").format(ct.getGiaBan()));
            txtTongMoi.setText(new DecimalFormat("###,###.###").format(ctBLL.LoadTableCT(tblCTHoaDon, lstCTByID)));
        }
    }
    
    public void clearForm(){
        txtMaHD.setText(null);
        txtMaKH.setText(null);
        cbbMaNV.setSelectedIndex(0);
        txtGhiChu.setText(null);
        txtTongTien.setText(null); 
    }
    public void clearFormCT(){
        txtMaSP.setText(null);
        txtTenSP.setText(null);
        txtSL.setText(null);
        txtGiam.setText(null);
        txtGia.setText(null);
    }
    
    public void UpdateHD(){
        try {
            HoaDon hd = getFormHD();
            if (hdBLL.sua(hd)) {
                Untils.MessBox.alert(null, "Cập nhật thành công!");
                lstHD = hdBLL.getAll();
                hdBLL.LoadTable(tblHoaDon, lstHD);
                setFormHD();
            } else {
                MessBox.alert(null, "Có lỗi xảy ra!");
            }
        } catch (Exception e) {
        }
    }
    public void DeleteHD(){
        String MaHD1 = txtMaHD.getText();
        if(MessBox.confirm(this, "Bạn có chắc muốn xoá ?")){
            if(ctBLL.xoaALL(MaHD1)) {
                loadTableCT();
                if(hdBLL.xoa(MaHD1)){
                    MessBox.alert(null, "Xoá thành công!");
                    lstHD = hdBLL.getAll();
                    hdBLL.LoadTable(tblHoaDon, lstHD);
                    tblCTHoaDon.removeAll();
                    clearFormCT();
                    clearForm();
                    tabs.setSelectedIndex(0);
                } else {
                    MessBox.alert(null, "Có lỗi xảy ra!"); 
                }
            } else {
                MessBox.alert(null, "Có lỗi xảy ra!");
            }
        }
    }
    HoaDon getFormHD() throws ParseException{
        HoaDon hd = new HoaDon();
        hd.setMaHD(txtMaHD.getText());
        hd.setMaKH(txtMaKH.getText());
        hd.setMaNV(cbbMaNV.getSelectedItem().toString());
        hd.setNgayLap(dateChs.getDate());
        hd.setTongTien(Double.parseDouble(txtTongMoi.getText().replace(",", "")));
        hd.setGhiChu(txtGhiChu.getText());
        return hd;
    }
    
    
    public void InsertCT(){
        try {
            CTHoaDon ct = getFormCT();
            if (ctBLL.themCT(ct)) {
                Untils.MessBox.alert(null, "Thêm thành công!");
                loadTableCT();
            } else {
                MessBox.alert(null, "Có lỗi xảy ra!");
            }
        } catch (Exception e) {
        }
    } 
    public void UpdateCT(){
        try {
            CTHoaDon ct = getFormCT();
            if (ctBLL.suaCT(ct)) {
                Untils.MessBox.alert(null, "Cập nhật thành công!");
                loadTableCT();
                clearFormCT();
            } else {
                MessBox.alert(null, "Có lỗi xảy ra!");
            }
        } catch (Exception e) {
        }
    }
    public void DeleteCT(){
        String MaSP = txtMaSP.getText();
        String MaHD = txtMaHD.getText();
        if(MessBox.confirm(this, "Bạn có chắc muốn xoá ?")){
            if(ctBLL.xoaCT(MaSP, MaHD)) {
                MessBox.alert(null, "Xoá thành công!");
                loadTableCT();
                clearFormCT();
                
            } else {
                MessBox.alert(null, "Có lỗi xảy ra!");
            }
        }
    }
    CTHoaDon getFormCT() throws ParseException{
        CTHoaDon ct = new CTHoaDon();
        int soluong = Integer.parseInt(txtSL.getText());
        int giamgia = Integer.parseInt(txtGiam.getText());
        double dongia = Double.parseDouble(txtGia.getText());
        double ThanhTien = (1.0)*soluong*dongia*(1-(1.0)*giamgia/100);
        ct.setMaHD(txtMaHD.getText());
        ct.setMaSP(txtMaSP.getText());
        ct.setTenSP(txtTenSP.getText());
        ct.setSoLuong(soluong);
        ct.setGiamGia(giamgia);
        ct.setDonGia(dongia);
        ct.setThanhTien(ThanhTien);
        return ct;
    }
    
    public void LoadCbbMaNV(){
        DefaultComboBoxModel CBMaNV = (DefaultComboBoxModel) cbbMaNV.getModel();
        CBMaNV.removeAllElements();
        NhanVien_DAL nvDTO = new NhanVien_DAL();
        List<NhanVien> list = nvDTO.getALL();
        for(NhanVien nv : list){
            CBMaNV.addElement(nv);
        }
    }
    
    public boolean NhapCT(){
        if(txtSL.getText().equals("")){
            MessBox.alert(this, "Bạn chưa nhập số lượng!");
            txtSL.requestFocus();
            return false;
        } else if (txtGiam.getText().equals("")){
            MessBox.alert(this, "Bạn chưa nhập giảm giá!");
            txtGiam.requestFocus();
            return false;
        }
        return true;
    }
}
