/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import BLL.SanPham_BLL;
import DTO.SanPham;
import static Untils.Image.readImage;
import static Untils.Image.saveImage;
import Untils.MessBox;
import Untils.Tool;
import com.barcodelib.barcode.Linear;
import com.github.sarxos.webcam.Webcam;
import com.github.sarxos.webcam.WebcamPanel;
import com.github.sarxos.webcam.WebcamResolution;
import com.google.zxing.BinaryBitmap;
import com.google.zxing.LuminanceSource;
import com.google.zxing.MultiFormatReader;
import com.google.zxing.NotFoundException;
import com.google.zxing.Result;
import com.google.zxing.client.j2se.BufferedImageLuminanceSource;
import com.google.zxing.common.HybridBinarizer;
import com.google.zxing.qrcode.encoder.QRCode;
import com.sun.javafx.iio.ImageStorage.ImageType;
import java.awt.Dimension;
import java.awt.image.BufferedImage;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileOutputStream;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.Date;
import java.util.concurrent.Executor;
import java.util.concurrent.Executors;
import java.util.concurrent.ThreadFactory;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.UIManager;

/**
 *
 * @author Duy
 */
public class pnl_SanPham extends javax.swing.JPanel implements Runnable, ThreadFactory {
    
    private WebcamPanel panel = null;
    private Webcam webcam = null;
    private static final long serialVersionUID = 6441489157408381878L;
    private Executor executor = Executors.newSingleThreadExecutor(this);
    
    SanPham_BLL spBBL = new SanPham_BLL();
    ArrayList<SanPham> lstSP = spBBL.getALL();
    /** 
     * Creates new form pnl_SanPham
     */
    public pnl_SanPham() {
        initComponents();
        Load();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fileChooser = new javax.swing.JFileChooser();
        tabs = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDSSP = new javax.swing.JTable();
        txtTimKiem = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        pnlCam = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        chkOnOFF = new javax.swing.JCheckBox();
        jLabel3 = new javax.swing.JLabel();
        txtTongTonkho = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        lblHinh = new javax.swing.JLabel();
        lblMaSP = new javax.swing.JLabel();
        lblMaSanPham = new javax.swing.JLabel();
        btnNewId = new javax.swing.JButton();
        lblTenSP = new javax.swing.JLabel();
        txtTenSP = new javax.swing.JTextField();
        btnSelectHinh = new javax.swing.JButton();
        lblTenNSX = new javax.swing.JLabel();
        txtTenNSX = new javax.swing.JTextField();
        lblDacDiem = new javax.swing.JLabel();
        cbbDacDiem = new javax.swing.JComboBox<>();
        lblGiaNhap = new javax.swing.JLabel();
        txtGiaNhap = new javax.swing.JTextField();
        lblGiaBan = new javax.swing.JLabel();
        txtGiaBan = new javax.swing.JTextField();
        NgayNhap = new javax.swing.JLabel();
        lblSoLuong = new javax.swing.JLabel();
        txtSoLuong = new javax.swing.JTextField();
        pnlChucNang = new javax.swing.JPanel();
        btnCapNhat = new javax.swing.JButton();
        btnThem = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        dateChs = new com.toedter.calendar.JDateChooser();

        setBackground(new java.awt.Color(255, 255, 255));

        tabs.setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        tblDSSP.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        tblDSSP.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "STT", "Mã sản phẩm", "Tên sản phẩm", "Tên NSX", "Đặc điểm", "Số lượng", "Giá nhập", "Giá bán", "Ngày nhập", "Hình"
            }
        ));
        tblDSSP.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDSSPMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblDSSP);

        txtTimKiem.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        txtTimKiem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTimKiemKeyReleased(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel1.setText("Tìm kiếm nhanh:");

        pnlCam.setBackground(new java.awt.Color(250, 250, 250));
        pnlCam.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(230, 230, 230)));
        pnlCam.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setForeground(new java.awt.Color(255, 51, 51));
        jLabel2.setText("Tắt khi chuyển tab!");

        chkOnOFF.setBackground(new java.awt.Color(255, 255, 255));
        chkOnOFF.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/offbtn25x40.png"))); // NOI18N
        chkOnOFF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkOnOFFActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 0, 0));
        jLabel3.setText("TỔNG SẢN PHẨM TỒN KHO:");

        txtTongTonkho.setEditable(false);
        txtTongTonkho.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        txtTongTonkho.setForeground(new java.awt.Color(255, 0, 0));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtTimKiem, javax.swing.GroupLayout.DEFAULT_SIZE, 668, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(chkOnOFF)
                                .addGap(27, 27, 27)))
                        .addComponent(pnlCam, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(txtTongTonkho, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlCam, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                            .addComponent(chkOnOFF)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(txtTimKiem, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 475, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtTongTonkho, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22))
        );

        tabs.addTab("Danh sách sản phẩm", jPanel1);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        lblHinh.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        lblHinh.setForeground(new java.awt.Color(255, 51, 51));
        lblHinh.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblHinh.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        lblHinh.setFocusable(false);
        lblHinh.setPreferredSize(new java.awt.Dimension(357, 512));
        lblHinh.setRequestFocusEnabled(false);

        lblMaSP.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        lblMaSP.setText("Mã sản phẩm:");

        lblMaSanPham.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        lblMaSanPham.setForeground(new java.awt.Color(255, 51, 51));
        lblMaSanPham.setText("SPXXXXX");

        btnNewId.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        btnNewId.setText("Mã mới");
        btnNewId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewIdActionPerformed(evt);
            }
        });

        lblTenSP.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        lblTenSP.setText("Tên sản phẩm:");

        txtTenSP.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N

        btnSelectHinh.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        btnSelectHinh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Imagepng30x30.png"))); // NOI18N
        btnSelectHinh.setText("Chọn hình");
        btnSelectHinh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelectHinhActionPerformed(evt);
            }
        });

        lblTenNSX.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        lblTenNSX.setText("Tên NSX:");

        txtTenNSX.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N

        lblDacDiem.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        lblDacDiem.setText("Đặc điểm:");

        cbbDacDiem.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        cbbDacDiem.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "100%", "99%" }));

        lblGiaNhap.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        lblGiaNhap.setText("Giá nhập:");

        txtGiaNhap.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N

        lblGiaBan.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        lblGiaBan.setText("Giá bán:");

        txtGiaBan.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N

        NgayNhap.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        NgayNhap.setText("Ngày nhập:");

        lblSoLuong.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        lblSoLuong.setText("Số lượng:");

        txtSoLuong.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N

        pnlChucNang.setBackground(new java.awt.Color(255, 255, 255));
        pnlChucNang.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Chức năng", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 0, 14))); // NOI18N

        btnCapNhat.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        btnCapNhat.setText("Sửa");
        btnCapNhat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCapNhatActionPerformed(evt);
            }
        });

        btnThem.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        btnThem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/addbtnicon25x25.png"))); // NOI18N
        btnThem.setText("Thêm");
        btnThem.setEnabled(false);
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnXoa.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        btnXoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/RecyclingBinicon25x25.png"))); // NOI18N
        btnXoa.setText("Xoá");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        btnReset.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        btnReset.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Loadicon25x25.png"))); // NOI18N
        btnReset.setText("Làm mới");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlChucNangLayout = new javax.swing.GroupLayout(pnlChucNang);
        pnlChucNang.setLayout(pnlChucNangLayout);
        pnlChucNangLayout.setHorizontalGroup(
            pnlChucNangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlChucNangLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlChucNangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pnlChucNangLayout.createSequentialGroup()
                        .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlChucNangLayout.createSequentialGroup()
                        .addComponent(btnCapNhat, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnReset, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlChucNangLayout.setVerticalGroup(
            pnlChucNangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlChucNangLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlChucNangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnThem)
                    .addComponent(btnXoa))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlChucNangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCapNhat)
                    .addComponent(btnReset))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        dateChs.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(153, 153, 153)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(lblHinh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnSelectHinh, javax.swing.GroupLayout.PREFERRED_SIZE, 357, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblTenNSX)
                            .addComponent(lblTenSP)
                            .addComponent(lblMaSP)
                            .addComponent(lblGiaBan)
                            .addComponent(lblGiaNhap)
                            .addComponent(lblSoLuong)
                            .addComponent(NgayNhap)
                            .addComponent(lblDacDiem))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(lblMaSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnNewId))
                            .addComponent(txtTenSP)
                            .addComponent(txtTenNSX)
                            .addComponent(cbbDacDiem, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtGiaNhap)
                            .addComponent(txtGiaBan)
                            .addComponent(txtSoLuong)
                            .addComponent(dateChs, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(pnlChucNang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(92, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblMaSP)
                            .addComponent(lblMaSanPham, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnNewId, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblTenSP)
                            .addComponent(txtTenSP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblTenNSX)
                            .addComponent(txtTenNSX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblDacDiem)
                            .addComponent(cbbDacDiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblGiaNhap)
                            .addComponent(txtGiaNhap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtGiaBan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblGiaBan, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblSoLuong)
                            .addComponent(txtSoLuong, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(NgayNhap)
                            .addComponent(dateChs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(33, 33, 33)
                        .addComponent(pnlChucNang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(lblHinh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnSelectHinh, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tabs.addTab("Chi tiết sản phẩm", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabs)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabs)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void tblDSSPMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDSSPMouseClicked
        setForm();
        tabs.setSelectedIndex(1);
    }//GEN-LAST:event_tblDSSPMouseClicked

    private void txtTimKiemKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTimKiemKeyReleased
        String query = txtTimKiem.getText();
        Tool.TableFilter(tblDSSP, query);
    }//GEN-LAST:event_txtTimKiemKeyReleased

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        reset();
    }//GEN-LAST:event_btnResetActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        Delete();
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        Insert();
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnCapNhatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCapNhatActionPerformed
        Update();
    }//GEN-LAST:event_btnCapNhatActionPerformed

    private void btnSelectHinhActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelectHinhActionPerformed
        selectImage();
    }//GEN-LAST:event_btnSelectHinhActionPerformed

    private void btnNewIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewIdActionPerformed
        reset();
        btnThem.setEnabled(true);
        try {
            lblMaSanPham.setText(spBBL.autoID().trim());
        } catch (SQLException ex) {
            Logger.getLogger(pnl_SanPham.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnNewIdActionPerformed

    private void chkOnOFFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkOnOFFActionPerformed
        // TODO add your handling code here:
        if(chkOnOFF.isSelected()){
            initWebcam();
            chkOnOFF.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/onbtn25x40.png")));
        } else {
            webcam.close();
            chkOnOFF.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/offbtn25x40.png")));
        }
    }//GEN-LAST:event_chkOnOFFActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel NgayNhap;
    private javax.swing.JButton btnCapNhat;
    private javax.swing.JButton btnNewId;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnSelectHinh;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnXoa;
    private javax.swing.JComboBox<String> cbbDacDiem;
    private javax.swing.JCheckBox chkOnOFF;
    private com.toedter.calendar.JDateChooser dateChs;
    private javax.swing.JFileChooser fileChooser;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblDacDiem;
    private javax.swing.JLabel lblGiaBan;
    private javax.swing.JLabel lblGiaNhap;
    private javax.swing.JLabel lblHinh;
    private javax.swing.JLabel lblMaSP;
    private javax.swing.JLabel lblMaSanPham;
    private javax.swing.JLabel lblSoLuong;
    private javax.swing.JLabel lblTenNSX;
    private javax.swing.JLabel lblTenSP;
    private javax.swing.JPanel pnlCam;
    private javax.swing.JPanel pnlChucNang;
    private javax.swing.JTabbedPane tabs;
    private javax.swing.JTable tblDSSP;
    private javax.swing.JTextField txtGiaBan;
    private javax.swing.JTextField txtGiaNhap;
    private javax.swing.JTextField txtSoLuong;
    private javax.swing.JTextField txtTenNSX;
    private javax.swing.JTextField txtTenSP;
    private javax.swing.JTextField txtTimKiem;
    private javax.swing.JTextField txtTongTonkho;
    // End of variables declaration//GEN-END:variables
    public void Load(){
        spBBL.LoadTable(tblDSSP, lstSP);
        try {
            txtTongTonkho.setText(String.valueOf(spBBL.SLTon()));
        } catch (SQLException ex) {
            Logger.getLogger(pnl_SanPham.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void setForm(){
        int srow = tblDSSP.getSelectedRow();
        if (srow != -1){
            lblMaSanPham.setText(tblDSSP.getValueAt(srow, 1).toString().trim());
            txtTenSP.setText(tblDSSP.getValueAt(srow, 2).toString().trim());
            txtTenNSX.setText(tblDSSP.getValueAt(srow, 3).toString());
            cbbDacDiem.setSelectedItem(tblDSSP.getValueAt(srow, 4).toString());
            txtSoLuong.setText(tblDSSP.getValueAt(srow, 5).toString());
            txtGiaNhap.setText(tblDSSP.getValueAt(srow, 6).toString().replace(",", ""));
            txtGiaBan.setText(tblDSSP.getValueAt(srow, 7).toString().replace(",", ""));
            Date ngay = Untils.Date.toDate(tblDSSP.getValueAt(srow, 8).toString(), ("yyyy-MM-dd"));
            dateChs.setDate(ngay);
            lblHinh.setIcon(readImage(tblDSSP.getValueAt(srow, 9).toString()));
            lblHinh.setToolTipText(tblDSSP.getValueAt(srow, 9).toString());
        }
    }
    
    public void Insert(){
        try {
            SanPham sp = getForm();
            if (spBBL.themSP(sp)) {
                Untils.MessBox.alert(null, "Thêm sản phẩm thành công!");
                wQRCode();
                wBarcode();
                lstSP = spBBL.getALL();
                spBBL.LoadTable(tblDSSP, lstSP);
                Load();
                setForm();
                btnThem.setEnabled(false);
                btnXoa.setEnabled(true);
                btnCapNhat.setEnabled(true);
            } else {
                MessBox.alert(null, "Có lỗi xảy ra!");
            }
        } catch (Exception e) {
        }
    }
    
    public void Update(){
        try {
            SanPham sp = getForm();
            if (spBBL.suaSP(sp)) {
                Untils.MessBox.alert(null, "Cập nhật sản phẩm thành công!");
                lstSP = spBBL.getALL();
                Load();
                spBBL.LoadTable(tblDSSP, lstSP);
                setForm();
            } else {
                MessBox.alert(null, "Có lỗi xảy ra!");
            }
        } catch (Exception e) {
        }
    }
    
    public void Delete(){
        String MaSP = lblMaSanPham.getText();
        if(MessBox.confirm(this, "Bạn có chắc muốn xoá sản phẩm này?")){
            if(spBBL.xoaSP(MaSP)) {
                MessBox.alert(null, "Xoá sản phẩm thành công!");
                lstSP = spBBL.getALL();
                Load();
                spBBL.LoadTable(tblDSSP, lstSP);
                tabs.setSelectedIndex(0);
                reset();
            } else {
                MessBox.alert(null, "Có lỗi xảy ra!");
            }
        }
    }
    
    public void reset(){
        lblMaSanPham.setText("SPxxxxx");
        txtTenSP.setText("");
        txtTenNSX.setText("");
        txtSoLuong.setText("");
        txtGiaNhap.setText("");
        txtGiaBan.setText("");
        txtTimKiem.setText("");
        lblHinh.setIcon(null);
        lblHinh.setToolTipText("");
    }    
    
    public void selectImage(){
        if(fileChooser.showOpenDialog(this)==JFileChooser.APPROVE_OPTION){
            File file = fileChooser.getSelectedFile();
            saveImage(file);
            ImageIcon icon = readImage(file.getName());
            lblHinh.setIcon(icon);
            lblHinh.setToolTipText(file.getName());
        }
    }
    
    SanPham getForm() throws ParseException{
        SanPham sp = new SanPham();
        sp.setMaSP(lblMaSanPham.getText());
        sp.setTenSP(txtTenSP.getText());
        sp.setNhaSX(txtTenNSX.getText());
        sp.setDacDiem(cbbDacDiem.getSelectedItem().toString());
        sp.setSoLuong(Integer.parseInt(txtSoLuong.getText()));
        sp.setGiaNhap(Double.parseDouble(txtGiaNhap.getText()));
        sp.setGiaBan(Double.parseDouble(txtGiaBan.getText()));
        sp.setNgayNhap(dateChs.getDate());
        sp.setHinhAnh(lblHinh.getToolTipText());
        return sp;
    }
    
    public void wQRCode(){
        try {
            ByteArrayOutputStream out = net.glxn.qrgen.QRCode.from(lblMaSanPham.getText()).to(net.glxn.qrgen.image.ImageType.PNG).stream();
            String f_name = lblMaSanPham.getText();
            String Path_name = "src/QRCodeImg/" ;
            FileOutputStream fout = new FileOutputStream(new File(Path_name +(f_name + ".PNG")));
            fout.write(out.toByteArray());
            fout.flush();
        } catch (Exception e) {
            System.out.println(e);
        }
    }
    
    public void wBarcode(){
        try {
            Linear barcode = new Linear();
            barcode.setType(Linear.CODE128B);
            barcode.setData(lblMaSanPham.getText());
            barcode.setI(11.0f);
            String fname = lblMaSanPham.getText();
            barcode.renderBarcode("src/BarcodeImages/" + fname +".png" );
        } catch (Exception e) {
        }
    }
    
    private void initWebcam() {
        Dimension size = WebcamResolution.QVGA.getSize();
        webcam = Webcam.getWebcams().get(0);
        webcam.setViewSize(size);
        panel = new WebcamPanel(webcam);
        panel.setPreferredSize(size);
        panel.setFPSDisplayed(true);
        pnlCam.add(panel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 55, 55));
        executor.execute(this);
    }
    @Override
    public void run() {
        do {
            try {
                Thread.sleep(100);
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
            Result result = null;
            BufferedImage image = null;
            if (webcam.isOpen()) {
                if ((image = webcam.getImage()) == null) {
                    continue;
                }
            }
            LuminanceSource source = new BufferedImageLuminanceSource(image);
            BinaryBitmap bitmap = new BinaryBitmap(new HybridBinarizer(source));
            try {
                result = new MultiFormatReader().decode(bitmap);
            } catch (NotFoundException e) {
                //Không có dữ liệu
            }
            if (result != null) {
                tabs.setSelectedIndex(1);
                lblMaSanPham.setText(result.getText());
                setFormQR();
            }
        } while (true);
    }
    @Override
    public Thread newThread(Runnable r) {
        Thread t = new Thread(r, "My Thread");
        t.setDaemon(true);
        return t;
    }
    public void setFormQR(){
        String masp = lblMaSanPham.getText().trim();
        if(Check(masp)){
            SanPham_BLL spBBL = new SanPham_BLL();
            SanPham lstSP = spBBL.getByMa(masp);
            txtTenSP.setText(lstSP.getTenSP().trim());
            txtTenNSX.setText(lstSP.getNhaSX());
            cbbDacDiem.setSelectedItem(lstSP.getDacDiem());
            txtGiaNhap.setText(new DecimalFormat("###,###.###").format(lstSP.getGiaNhap()).replace(",", ""));
            txtGiaBan.setText(new DecimalFormat("###,###.###").format(lstSP.getGiaBan()).replace(",", ""));
            txtSoLuong.setText(String.valueOf(lstSP.getSoLuong()));
            dateChs.setDate(lstSP.getNgayNhap());
            lblHinh.setIcon(Untils.Image.readImage(lstSP.getHinhAnh()));
        }
    } 
    public boolean Check(String masp){
        if(spBBL.check(masp)==false){
            MessBox.alert(this, "Mã sản phẩm không tồn tại! Xin kiểm tra lại!");
            reset();
            return false;
        } 
        return true;
    }
}
